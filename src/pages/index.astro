---
import BaseLayout from "../layouts/BaseLayout.astro";
import "../styles/pages/_home.scss";
import { Image } from "@unpic/astro";
---

<BaseLayout title="Wanderlust Lust Hostel | Koh Phangan Home">
  <div id="home-container">
    <section id="hero">
      <div class="image-container">
        <Image src="shoreline.jpeg" alt="" />
      </div>
      <div class="hero__content">
        <p class="hero__rating">‚≠êÔ∏è 8.9 Fabulous - Hostel World</p>
        <h1 class="hero__title">Welcome to Paradise, Fellow Wanderers! üèùÔ∏è</h1>
        <p class="hero__description">
          Your lively home base in Koh Phangan awaits! Just 5 minutes from
          Thongsala Pier and a quick stroll to the beach, Wanderlust Hostel is
          where unforgettable memories begin.
        </p>
        <p class="hero__card">Party. Connect. Explore. Repeat.</p>
        <div class="hero__cta">
          <h2>Ready for good vibes and new friendships?</h2>
          <a
            href="https://www.hostelworld.com/pwa/hosteldetails.php/The-Wanderlust-Hostel/Koh-Phangan/272966?guests=2&from=2025-07-24&to=2025-07-25"
          >
            <button class="hero__cta-btn btn btn--accent"
              >Book your bed now</button
            >
          </a>
        </div>
      </div>
    </section>
    <section id="why-us">
      <div class="why-us__cards">
        <div class="why-us__card">
          <h3>üåä Perfect Location</h3>
          <p>
            5 minutes from pier, 5-minute walk to beach. Koh Phangan's
            best-connected spot!
          </p>
        </div>
        <div class="why-us__card">
          <h3>üéµ Social Vibes</h3>
          <p>
            Music until midnight, poolside bar, and fellow travelers from around
            the globe.
          </p>
        </div>
        <div class="why-us__card">
          <h3>üõèÔ∏è Comfort Guaranteed</h3>
          <p>
            Clean AC dorms, capsule options, female-only rooms, and 24/7
            security.
          </p>
        </div>
        <div class="why-us__card">
          <h3>üèä‚Äç‚ôÄÔ∏è Epic Amenities</h3>
          <p>
            5 minutes from pier, 5-minute walk to beach. Koh Phangan's
            best-connected spot!
          </p>
        </div>
      </div>
    </section>
    <section id="edgar">
      <div class="edgar__text">
        <h2>Meet Our Legend: Edgar!</h2>
        <p class="edgar__subtitle">
          From volunteer to the coolest manager in Southeast Asia
        </p>
        <p class="edgar__content">
          <em>
            "5 years ago, I arrived as a wide-eyed volunteer from Izmir. Now I'm
            living my dream managing this incredible community. Every day brings
            new faces, new stories, and new adventures. That's the Wanderlust
            magic!" - Edgar
          </em>
        </p>
      </div>
      <div class="edgar__image-container">
        <Image src="edgar.jpg" alt="" />
      </div>
    </section>
    <section id="meet-the-team">
      <div class="cards">
        <div class="card">
          <Image src="Fang.jpg" alt="Wanderlust Team 1" class="card__image" />
          <h3 class="card__title">Fang</h3>
          <p class="card__body">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Suscipit,
            consequuntur.
          </p>
        </div>
        <div class="card">
          <img
            src="https://placehold.co/400"
            alt="Wanderlust Team 2"
            class="card__image"
          />
          <h3 class="card__title">Shine</h3>
          <p class="card__body">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Suscipit,
            consequuntur.
          </p>
        </div>
        <div class="card">
          <Image src="edgar.jpg" alt="Wanderlust Team 3" class="card__image" />
          <h3 class="card__title">Edgar</h3>
          <p class="card__body">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Suscipit,
            consequuntur.
          </p>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>
<!-- Load GSAP libraries with is:inline -->
<script
  src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/gsap.min.js"
  is:inline></script>
<script
  src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/ScrambleTextPlugin.min.js"
  is:inline></script>
<script
  src="https://cdn.jsdelivr.net/npm/gsap@3.13.0/dist/ScrollTrigger.min.js"
  is:inline></script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    // Register GSAP plugins
    gsap.registerPlugin(ScrambleTextPlugin, ScrollTrigger);

    // Define the texts for the top 5 most popular languages
    const texts = [
      "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå!",
      "Willkommen im Paradies!",
      "Ch√†o m·ª´ng ƒë·∫øn v·ªõi Thi√™n ƒë∆∞·ªùng!",
      "Welkom in het paradijs!",
      "Welcome to Paradise!",
      "Cennete ho≈ü geldiniz!",
      "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–π!",
      "Bienvenidos al para√≠so!",
      "Bienvenue au paradis!",
      "‡§∏‡•ç‡§µ‡§∞‡•ç‡§ó ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
      "Ê¨¢ËøéÊù•Âà∞Â§©Â†Ç!",
    ];

    const title = document.querySelector(".hero__title");

    if (title) {
      let lastIndex = -1; // Track the last used index to avoid repeats

      function getRandomText() {
        let randomIndex;
        do {
          randomIndex = Math.floor(Math.random() * texts.length);
        } while (randomIndex === lastIndex && texts.length > 1); // Avoid repeating the same text

        lastIndex = randomIndex;
        return texts[randomIndex];
      }

      function animateRandomText() {
        const randomText = getRandomText();

        // Create individual timeline for each animation
        const tl = gsap.timeline({
          onComplete: () => {
            // Wait a bit then start the next random animation
            setTimeout(animateRandomText, 1000);
          },
        });

        tl.to(title, {
          duration: 1,
          scrambleText: {
            text: randomText,
            chars: "üí¶üï∂Ô∏è‚òÄÔ∏èüëô", // Scramble characters
            revealDelay: 0.5,
            tweenLength: false,
            speed: 0.3,
          },
        }).to(
          title,
          {
            duration: 0.5,
            opacity: 0,
            ease: "power2.inOut",
            onComplete: () => {
              gsap.set(title, { opacity: 1 });
            },
          },
          "+=1", // Hold each text for 1 second before fading
        );
      }

      // Start the random animation cycle
      animateRandomText();
    }
  });
</script>
<script>
  const isMobile =
    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
      navigator.userAgent,
    ) || window.innerWidth <= 768;

  let ticking = false;
  let scrollPos = 0;

  function updateParallax() {
    const scrolled = window.pageYOffset;
    const heroSection = document.getElementById("hero");

    if (!heroSection) return;

    const heroHeight = heroSection.offsetHeight;
    const imageContainer = heroSection.querySelector(".image-container");
    const heroContent = heroSection.querySelector(".hero__content");

    if (scrolled < heroHeight) {
      if (imageContainer) {
        // Reduce parallax intensity on mobile
        const imageSpeed = scrolled * (isMobile ? 0.1 : 0.4);
        imageContainer.style.transform = `translate3d(0, ${imageSpeed}px, 0)`;
      }

      if (heroContent) {
        const contentSpeed = scrolled * (isMobile ? 0.05 : 0.2);
        heroContent.style.transform = `translate3d(0, ${contentSpeed}px, 0)`;
      }
    }

    ticking = false;
  }

  // Scroll-driven blur animation for why-us cards
  function updateBlurAnimation() {
    const cards = document.querySelectorAll(".why-us__card");
    const windowHeight = window.innerHeight;

    cards.forEach((card) => {
      const rect = card.getBoundingClientRect();

      // Check if card is in viewport
      const isInViewport = rect.top < windowHeight && rect.bottom > 0;

      if (!isInViewport) {
        card.style.filter = "blur(8px)";
        return;
      }

      // Calculate visibility percentage (0 = not visible, 1 = fully visible)
      const visibleTop = Math.max(0, -rect.top);
      const visibleBottom = Math.min(rect.height, windowHeight - rect.top);
      const visibleHeight = visibleBottom - visibleTop;
      const visibilityRatio = visibleHeight / rect.height;

      // More aggressive unblur - starts unblurring when 30% visible
      let blurAmount;
      if (visibilityRatio > 0.3) {
        // Rapid unblur when significantly visible
        const unblurProgress = Math.min((visibilityRatio - 0.6) / 0.4, 1);
        blurAmount = 8 * (1 - unblurProgress);
      } else {
        blurAmount = 8;
      }

      card.style.filter = `blur(${Math.max(0, blurAmount)}px)`;
    });
  }

  // Use different event handling for mobile
  if (isMobile) {
    // For mobile: use touchmove for immediate response
    let touchStartY = 0;

    window.addEventListener(
      "touchstart",
      (e) => {
        touchStartY = e.touches[0].clientY;
      },
      { passive: true },
    );

    window.addEventListener(
      "touchmove",
      () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateParallax();
            updateBlurAnimation();
          });
          ticking = true;
        }
      },
      { passive: true },
    );

    // Also keep scroll listener as fallback
    window.addEventListener(
      "scroll",
      () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateParallax();
            updateBlurAnimation();
          });
          ticking = true;
        }
      },
      { passive: true },
    );
  } else {
    // Desktop scroll handling
    window.addEventListener(
      "scroll",
      () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateParallax();
            updateBlurAnimation();
          });
          ticking = true;
        }
      },
      { passive: true },
    );
  }

  // Initial blur animation setup
  updateBlurAnimation();
</script>
